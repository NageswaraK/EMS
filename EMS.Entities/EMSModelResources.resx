<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountHolder1NameIsRequired" xml:space="preserve">
    <value>Please enter 'Account Holder1 Name'.</value>
  </data>
  <data name="AccountHolderNameIsRequired" xml:space="preserve">
    <value>Please enter 'Account Holder Name'.</value>
  </data>
  <data name="AccountNumberCannotBeEmpty" xml:space="preserve">
    <value>Please enter 'Account Number'.</value>
  </data>
  <data name="AccountTypeIsRequired" xml:space="preserve">
    <value>Please select 'Account Type'.</value>
  </data>
  <data name="AssetNameIsRequired" xml:space="preserve">
    <value>Please enter 'Asset Name'.</value>
  </data>
  <data name="BankNameIsRequired" xml:space="preserve">
    <value>Please enter 'Bank Name'.</value>
  </data>
  <data name="BusinessIDIsRequired" xml:space="preserve">
    <value>Please enter 'Business ID'.</value>
  </data>
  <data name="BusinessNameIsRequired" xml:space="preserve">
    <value>Please enter 'Business Name'.</value>
  </data>
  <data name="BusinessPhoneIsRequired" xml:space="preserve">
    <value>Please enter Business Phone.</value>
  </data>
  <data name="CardTitleIsRequired" xml:space="preserve">
    <value>Please enter 'Card Title'.</value>
  </data>
  <data name="CategoryIsRequired" xml:space="preserve">
    <value>Please select 'Category'.</value>
  </data>
  <data name="CategoryNameIsRequired" xml:space="preserve">
    <value>Please enter 'Category Name'.</value>
  </data>
  <data name="CityAllowsonlyAlphabetsAndNumbers" xml:space="preserve">
    <value>City allows only 'Alphabets' and 'Numbers'.</value>
  </data>
  <data name="CompanyNameisRequired" xml:space="preserve">
    <value>Please enter 'Company Name'. </value>
  </data>
  <data name="CostPriceIsRequired" xml:space="preserve">
    <value>Please enter 'Cost Price'.</value>
  </data>
  <data name="CountryIsRequired" xml:space="preserve">
    <value>Please enter 'Country Name'.</value>
  </data>
  <data name="CurrentAmountIsRequired" xml:space="preserve">
    <value>Please enter 'Current Amount'.</value>
  </data>
  <data name="EmployeeIDIsRequired" xml:space="preserve">
    <value>Please enter Employee ID.</value>
  </data>
  <data name="EmployeeNumberAlreadyExists" xml:space="preserve">
    <value>'Employee Number' already exists.</value>
  </data>
  <data name="EnterAccountName" xml:space="preserve">
    <value>Please enter 'Account Name'.</value>
  </data>
  <data name="EnterOnlyNumbers" xml:space="preserve">
    <value>Please enter only Numbers.</value>
  </data>
  <data name="EnterValidFaxNo" xml:space="preserve">
    <value>Please enter valid 'Fax No'.</value>
  </data>
  <data name="EnterValidInput" xml:space="preserve">
    <value>Enter valid input like 0.00.</value>
  </data>
  <data name="EntervalidPortNo" xml:space="preserve">
    <value>Please enter valid Port No.</value>
  </data>
  <data name="EnterValidRoutingNumber" xml:space="preserve">
    <value>Please enter valid 'Routing Number'.</value>
  </data>
  <data name="EntervalidSMTPServer" xml:space="preserve">
    <value>Please enter valid SMTP Server.</value>
  </data>
  <data name="EnterValidWebSite" xml:space="preserve">
    <value>Enter valid 'WebSite'.</value>
  </data>
  <data name="FirstNameAlreadyExists" xml:space="preserve">
    <value>'First Name' already exists.</value>
  </data>
  <data name="FirstNameIsRequired" xml:space="preserve">
    <value>Please enter 'First Name'.</value>
  </data>
  <data name="FirstNameLastNameAlreadyExists" xml:space="preserve">
    <value>'First Name' &amp; 'Last Name' already exists.</value>
  </data>
  <data name="GenderIdIsRequired" xml:space="preserve">
    <value>GenderId is required.</value>
  </data>
  <data name="InitialAmountIsRequired" xml:space="preserve">
    <value>Please enter 'Initial Amount'.</value>
  </data>
  <data name="InvalidPhoneNumber" xml:space="preserve">
    <value>Please enter valid 'Phone number'.</value>
  </data>
  <data name="KindlyEnterAmount" xml:space="preserve">
    <value>Please enter 'Amount'.</value>
  </data>
  <data name="KindlyEnterDate" xml:space="preserve">
    <value>Please enter 'Date'.</value>
  </data>
  <data name="KindlyEnterDescription" xml:space="preserve">
    <value>Please enter Description.</value>
  </data>
  <data name="KindlyEnterFromDate" xml:space="preserve">
    <value>Please enter 'From Date'.</value>
  </data>
  <data name="KindlyEnterOvertimeHours" xml:space="preserve">
    <value>Please  enter 'Overtime Hours'.</value>
  </data>
  <data name="KindlyEnterRegularHours" xml:space="preserve">
    <value>Please enter 'Regular Hours'.</value>
  </data>
  <data name="KindlyEnterToDate" xml:space="preserve">
    <value>Please  enter 'To Date'.</value>
  </data>
  <data name="KindlyselectEmployee" xml:space="preserve">
    <value>Please enter 'Employee Name'.</value>
  </data>
  <data name="KindlySelectInvoice" xml:space="preserve">
    <value>Please  select 'Invoice'.</value>
  </data>
  <data name="KindlySelectProject" xml:space="preserve">
    <value>Please select 'Project'.</value>
  </data>
  <data name="KindlySelectStatus" xml:space="preserve">
    <value>Please select 'Status'.</value>
  </data>
  <data name="KindlySelectType" xml:space="preserve">
    <value>Please select 'Type'.</value>
  </data>
  <data name="LastNameAlreadyExists" xml:space="preserve">
    <value>'Last Name' already exists.</value>
  </data>
  <data name="LastNameIsRequired" xml:space="preserve">
    <value>Please enter 'Last Name'.</value>
  </data>
  <data name="NumbersAndSpecialCharactersAreNotAllowedInTheName" xml:space="preserve">
    <value>Numbers and special characters are not allowed in the Name.</value>
  </data>
  <data name="OpeningBalanceIsRequired" xml:space="preserve">
    <value>Please enter 'Opening Balance'.</value>
  </data>
  <data name="PaidByIsRequired" xml:space="preserve">
    <value>'Paid By' is required.</value>
  </data>
  <data name="PaidForIsRequired" xml:space="preserve">
    <value>'Paid For' is required.</value>
  </data>
  <data name="PaidFromIsRequired" xml:space="preserve">
    <value>'Paid From' is required.</value>
  </data>
  <data name="PaidToAccountIsRequired" xml:space="preserve">
    <value>'Paid To Account' is required.</value>
  </data>
  <data name="PleaseEnterCaptcha" xml:space="preserve">
    <value>Please enter 'Captcha'.</value>
  </data>
  <data name="PleaseEnterCompanyWebsite" xml:space="preserve">
    <value>Please enter Company Website.</value>
  </data>
  <data name="PleaseEnterDisplayName" xml:space="preserve">
    <value>Please Enter Display Name</value>
  </data>
  <data name="PleaseEnterEmployeeNumber" xml:space="preserve">
    <value>Please enter 'Employee Number'.</value>
  </data>
  <data name="PleaseEnterPortNo" xml:space="preserve">
    <value>Please enter Port No.</value>
  </data>
  <data name="PleaseEnterSMTPServer" xml:space="preserve">
    <value>Please enter SMTP Server.</value>
  </data>
  <data name="PleaseEnterUserName" xml:space="preserve">
    <value>Please enter 'User Name'.</value>
  </data>
  <data name="PleaseEnterValidAccountNumber" xml:space="preserve">
    <value>Please enter valid 'Account Number'.</value>
  </data>
  <data name="PleaseEnterValidEmail" xml:space="preserve">
    <value>Please enter valid 'Email'.</value>
  </data>
  <data name="PleaseEnterValidProductId" xml:space="preserve">
    <value>Please enter valid Product Id.</value>
  </data>
  <data name="PleaseEnterValidProjectId" xml:space="preserve">
    <value>Please enter valid Project Id.</value>
  </data>
  <data name="PleaseEnterValidServiceId" xml:space="preserve">
    <value>Please enter valid Service Id.</value>
  </data>
  <data name="PleaseEnterValidSwiftCode" xml:space="preserve">
    <value>Please enter valid SwiftCode.</value>
  </data>
  <data name="ProductsIdIsRequired" xml:space="preserve">
    <value>Please enter Products Id.</value>
  </data>
  <data name="ProjectIdIsRequired" xml:space="preserve">
    <value>Please enter Project Id.</value>
  </data>
  <data name="ReceivedByIsRequired" xml:space="preserve">
    <value>Received By is required.</value>
  </data>
  <data name="ReceivedFromIsRequired" xml:space="preserve">
    <value>Received From is required.</value>
  </data>
  <data name="ReceivedToIsRequired" xml:space="preserve">
    <value>Received To is required.</value>
  </data>
  <data name="RoutingNumberCannotBeEmpty" xml:space="preserve">
    <value>Please enter 'Routing Number'.</value>
  </data>
  <data name="RoutingNumberIsNotValid" xml:space="preserve">
    <value>Routing Number is not valid.</value>
  </data>
  <data name="ServiceIdIsRequired" xml:space="preserve">
    <value>Service Id is required.</value>
  </data>
  <data name="SocialSecurityNumberIsNotValid" xml:space="preserve">
    <value>Please enter valid 'Social Security Number'.</value>
  </data>
  <data name="StateIsRequired" xml:space="preserve">
    <value>Please enter 'State Name'.</value>
  </data>
  <data name="TheBalanceIsNotInTheCorrectFormat" xml:space="preserve">
    <value>The 'Balance' is not in the correct format.</value>
  </data>
  <data name="TitleIsRequired" xml:space="preserve">
    <value>Please enter 'Title'. </value>
  </data>
  <data name="TypeOfAssetIsRequired" xml:space="preserve">
    <value>Please select 'Type of Asset'.</value>
  </data>
  <data name="VendorIsRequired" xml:space="preserve">
    <value>Please enter 'Vendor Name'.</value>
  </data>
  <data name="LeaveIDIsRequired" xml:space="preserve">
    <value>Please select 'Leave Type'.</value>
  </data>
  <data name="ReasonIDIsRequired" xml:space="preserve">
    <value>Please select 'Reason'.</value>
  </data>
</root>